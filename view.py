# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'u1.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QBoxLayout, QFileDialog, QHBoxLayout, QLabel, QStatusBar, QWidget, QPushButton, QVBoxLayout
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QColor, QFont, QPalette, QPixmap
from PyQt5.QtWidgets import QApplication, QPushButton
import sys

def files(statusBar,window):
        fileName, _ = QFileDialog.getOpenFileName(window, "Selecciona los mediose",
                ".", "Video Files (*.mp4 *.flv *.ts *.mts *.avi)")

        if fileName != '':
            statusBar.showMessage(fileName)

# def view():
#     app = QApplication([])
#     app.setStyle('Fusion')
#     palette = QPalette()
#     window = QWidget()
#     window.setWindowTitle("Player")
#     window.setGeometry(109,100,2000,1500)
#     window.setFixedSize(2000, 1500)
#     label=QLabel(window)
#     # label.setGeometry(100,100,1000,1000)
#     pixmap = QPixmap("")
#     print(pixmap)
#     label.setPixmap(pixmap)
#     label.resize(pixmap.width(),pixmap.height())
#     openButton = QPushButton("Open Video",window)
#     openButton.setGeometry(0,1390,2000,90)
#     openButton.setFont(QFont("Noto Sans", 8))
#     openButton.setFixedHeight(50)
#     statusBar = QStatusBar(window)
#     statusBar.setFont(QFont("Noto Sans", 7))
#     statusBar.showMessage("Ready")
#     statusBar.setGeometry(940,1440,2000,50)
#     statusBar.setFixedHeight(50)
#     openButton.clicked.connect(files(statusBar,window))

#     # controlLayout = QHBoxLayout()
#     # controlLayout.setContentsMargins(0, 0, 0, 0)
#     # controlLayout.addWidget(openButton)
#     # layout = QVBoxLayout()
#     # layout.addLayout(label)
#     # layout.addLayout(controlLayout)
#     # layout.addWidget(statusBar)
    

#     # layout = QVBoxLayout()
#     # layout.addWidget(QPushButton('Top'))
#     # layout.addWidget(QPushButton('Bottom'))
#     # window.setLayout(layout)
#     window.show()
#     sys.exit(app.exec_())
# if __name__ == "__main__":
#    view()

# importing the required libraries

from PyQt5.QtWidgets import *
from PyQt5.QtGui import QPixmap
import sys


class Window(QMainWindow):
    def __init__(self):
        super().__init__()

        self.acceptDrops()
        # set the title
        self.setWindowTitle("Image")

        # setting the geometry of window
        
        self.setFixedSize(2000, 1500)
        # 
        
        
        # creating label
        self.label = QLabel(self)
        
        # loading image
        self.pixmap = QPixmap('image.png')

        # adding image to label
        self.label.setPixmap(self.pixmap)

        # Optional, resize label to image size
        self.label.resize(self.pixmap.width(),self.pixmap.height())
        self.initUI(self)
        # show all the widgets
    def initUI(self):
        self.show()

#         self.setWindowTitle(self.title)
#         self.setGeometry(self.left, self.top, self.width, self.height)
        
#         self.openFileNameDialog()
#         self.openFileNamesDialog()
#         self.saveFileDialog()
        
#         self.show()	

# create pyqt5 app
App = QApplication([])
App.setStyle('Fusion')

# create the instance of our Window
window = Window()

# start the app
sys.exit(App.exec())
   